"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _figlet = _interopRequireDefault(require("figlet"));

var _gradientString = _interopRequireDefault(require("gradient-string"));

var _logSymbols = _interopRequireDefault(require("log-symbols"));

var _boxen = _interopRequireDefault(require("boxen"));

var _chalk = _interopRequireDefault(require("chalk"));

var _terminalLink = _interopRequireDefault(require("terminal-link"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const header = _gradientString.default.vice(_figlet.default.textSync('Tipe'));

const creatingAPIKey = `...Creating API Key`;
const errorCreatingAPIKey = 'Could not create an API Key';

const unsupportedFrameworks = frameworks => `Could not detect supported framework.

  You can use Tipe to manage content for any app on any platform.
  However, the Tipe Editor is only supported for:
    ${frameworks.map(f => _chalk.default.magenta(f.name) + '\n')}
  You can also install and deploy a standalone Tipe Editor instance:
    "yarn add ${_chalk.default.green('@tipe/standalone-editor')}"
    "npm install ${_chalk.default.green('@tipe/standalone-editor')} --save"
`;

const intro = `
Thanks for using Tipe. Let's quickly get you started, this won't take long ðŸš€
`;
const foundAuth = `${_logSymbols.default.success} Authenticated with Tipe.`;
const alreadyAuth = `${_logSymbols.default.info} Authenticated with Tipe. You're already signed in. To signout run:
tipe signout
`;
const signedout = `${_logSymbols.default.success} Successfully signed out`;
const authError = `Oh no :(. We are having trouble right now.`;
const gettingProjects = '...Fetching your projects';
const projectsLoaded = 'Projects loaded';
const projectsError = 'Could not get Projects';
const noProjects = `You don't have any projects. To create one run:

tipe init
`;

const authenticated = (_, email) => `Authentication for ${email} success ðŸ’¯. Saving for next time`;

const creatingFirstProject = '... Creating your first Project and Environment';

const createdFirstProject = (_, project, environment) => `Created Project "${project}" and Environment "${environment}"`;

const creatingProject = '... Creating Project';
const creatingEnv = '... Creating Environment';
const createdProject = 'Project created';
const createdEnv = 'Environment created';
const needToAuth = `Account not found. To get started run:

tipe init
`;
const notAuthenticated = `Account not found`;
const openingAuth = `Opening browser so you can signin or signup ðŸ˜˜`;
const waitingForAuth = '...Waiting for you to finish authenticating ðŸ˜´';
const installing = '...Installing the Tipe dashboard, hold tight ðŸ‘€';
const installError = `${_chalk.default.redBright.bold('Could not install the Tipe dashboard')}.

This might be an issue with your npm or yarn installation.
You can still install the Tipe dashboard:

${_chalk.default.bold('* gatsby theme: "npm install -S gatsby-theme-tipe"')}
${_chalk.default.bold('* standalone:   "git clone https://github.com/tipeio/dashboard-standalone"')}
`;

const installed = (_, dashboard) => `Tipe dashboard (${dashboard}) installed ðŸ˜Ž`;

const done = message => (0, _boxen.default)(`ðŸŽ‰ ${_chalk.default.white("You're all set")}  ðŸŽ‰ 

${message}
__________________________________________

Check out our docs for more:

${(0, _terminalLink.default)(_chalk.default.green('Guides'), 'https://docs.tipe.io/guides')}
${(0, _terminalLink.default)(_chalk.default.green('API Reference'), 'https://docs.tipe.io/reference')}
${(0, _terminalLink.default)(_chalk.default.green('Customizing the editor'), 'https://docs.tipe.io/customizing')}
`, {
  borderColor: 'magenta',
  padding: 1
});

const detectingFramework = `...Detecting framework`;
const nextJsDone = `Configure the Tipe Editor in your "next.config.js" file.`;
const gatsbyJsDone = `Configure the Tipe Editor in your gatsby.config.js file`;
const reactDone = `Configure the Tipe Editor in your main router file.`;
var _default = {
  detectingFramework,
  header,
  done,
  openingAuth,
  installing,
  waitingForAuth,
  installError,
  intro,
  foundAuth,
  gettingProjects,
  projectsLoaded,
  creatingProject,
  creatingEnv,
  createdProject,
  createdEnv,
  notAuthenticated,
  authError,
  authenticated,
  installed,
  creatingFirstProject,
  createdFirstProject,
  needToAuth,
  projectsError,
  noProjects,
  alreadyAuth,
  signedout,
  errorCreatingAPIKey,
  creatingAPIKey,
  unsupportedFrameworks,
  reactDone,
  gatsbyJsDone,
  nextJsDone
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,